services:
  api: &main_app
    build:
      context: ../..
      dockerfile: ./Dockerfile
    image: pes_apiv1:${PES_APIV1_VERSION:-latest}
    restart: always
    env_file:
      - .env
    ports:
      - "8000:8000"
    labels:
      # Enables traefik for this container.
      - traefik.enable=true
      - traefik.http.routers.pes_apiv1.rule=Host(`${PES_APIV1_TRAEFIK_HOST:-pes_apiv1.localhost}`)
      - traefik.http.routers.pes_apiv1.entrypoints=http
      - traefik.http.routers.pes_apiv1.service=pes_apiv1
      - traefik.http.services.pes_apiv1.loadbalancer.server.port=${PES_APIV1_PORT:-8000}
    networks:
      - default
      - traefik-shared
    depends_on:
      db:
        condition: service_healthy

  db:
    image: postgres:16.3-bullseye
    hostname: pes_apiv1-db
    ports:
      - "5469:5432"
    environment:
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - pes_apiv1-db-data:/var/lib/postgresql/data
    restart: always
    healthcheck:
      test: pg_isready -U ${POSTGRES_USER}
      interval: 2s
      timeout: 3s
      retries: 40

  migrator:
    image: pes_apiv1:${PES_APIV1_VERSION:-latest}
    restart: "no"
    command: alembic upgrade head
    env_file:
      - .env
    depends_on:
      db:
        condition: service_healthy

volumes:
  pes_apiv1-db-data:
    name: pes_apiv1-db-data

networks:
  # Network for traefik.
  traefik-shared:
    name: traefik-shared