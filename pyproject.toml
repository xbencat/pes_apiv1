[tool.poetry]
name = "pes_apiv1"
version = "0.1.0"
description = "REST API for PES (Portal of Electronic Services) - Loan management system"
authors = [
    "Gregor Bencat <bencat.gregor@gmail.com>"
]
maintainers = [
    "Gregor Bencat <bencat.gregor@gmail.com>"
]
readme = "README.md"

[tool.poetry.dependencies]
python = ">3.9.1,<4"
fastapi = "^0.115.6"
uvicorn = { version = "^0.34.0", extras = ["standard"] }
gunicorn = "^23.0.0"
pydantic = "^2.10.4"
pydantic-settings = "^2.7.0"
yarl = "^1.18.3"
ujson = "^5.10.0"
SQLAlchemy = {version = "^2.0.36", extras = ["asyncio"]}
alembic = "^1.14.0"
asyncpg = {version = "^0.30.0", extras = ["sa"]}
httptools = "^0.6.4"
pymongo = "^4.10.1"
sentry-sdk = "^2.19.2"
loguru = "^0.7.3"


[tool.poetry.group.dev.dependencies]
pytest = "^8"
ruff = "^0.5.0"
mypy = "^1.10.1"
pre-commit = "^3.7.1"
black = "^24.4.2"
pytest-cov = "^5"
anyio = "^4"
pytest-env = "^1.1.3"
httpx = "^0.27.0"

[tool.isort]
profile = "black"
multi_line_output = 3
src_paths = ["pes_apiv1",]

[tool.mypy]
strict = true
ignore_missing_imports = true
allow_subclassing_any = true
allow_untyped_calls = true
pretty = true
show_error_codes = true
implicit_reexport = true
allow_untyped_decorators = true
warn_unused_ignores = false
warn_return_any = false
namespace_packages = true
plugins = ["pydantic.mypy"]

[tool.pydantic-mypy]
init_forbid_extra = true
init_typed = true
warn_required_dynamic_aliases = true

[tool.pytest.ini_options]
filterwarnings = [
    "error",
    "ignore::DeprecationWarning",
    "ignore:.*unclosed.*:ResourceWarning",
]
env = [
    "PES_APIV1_ENVIRONMENT=pytest",
    "PES_APIV1_DB_BASE=pes_apiv1_test",
    "PES_APIV1_SENTRY_DSN=",
]

[tool.ruff]
# List of enabled rulsets.
# See https://docs.astral.sh/ruff/rules/ for more information.
lint.select = [
    "E",   # Error
    "F",   # Pyflakes
    "W",   # Pycodestyle
    "C90", # McCabe complexity
    "I",   # Isort
    "N",   # pep8-naming
    "D",   # Pydocstyle
    "ANN", # Pytype annotations
    "S",   # Bandit
    "B",   # Bugbear
    "COM", # Commas
    "C4",  # Comprehensions
    "ISC", # Implicit string concat
    "PIE", # Unnecessary code
    "T20", # Catch prints
    "PYI", # validate pyi files
    "Q",   # Checks for quotes
    "RSE", # Checks raise statements
    "RET", # Checks return statements
    "SLF", # Self checks
    "SIM", # Simplificator
    "PTH", # Pathlib checks
    "ERA", # Checks for commented out code
    "PL",  # PyLint checks
    "RUF", # Specific to Ruff checks
]
lint.ignore = [
    "D105",    # Missing docstring in magic method
    "D107",    # Missing docstring in __init__
    "B008",    # Do not perform function calls in argument defaults
    "D211",    # No blank lines allowed before class docstring
    "D212",    # Multi-line docstring summary should start at the first line
    "D401",    # First line should be in imperative mood
    "D104",    # Missing docstring in public package
    "D100",    # Missing docstring in public module
    "D202",    # No blank lines allowed after function docstring
    "ANN102",  # Missing type annotation for self in method
    "ANN101",  # Missing type annotation for argument
    "ANN401",  # typing.Any are disallowed in `**kwargs
    "PLR0913", # Too many arguments for function call
    "D106",    # Missing docstring in public nested class
    "RUF012",  # Ignore mutable class attributes warning (SQLAlchemy-friendly)
]
exclude = [
    "pes_apiv1/db/migrations",
    ".venv/"
]
lint.mccabe = { max-complexity = 15 }
line-length = 120

[tool.ruff.lint.per-file-ignores]
"tests/*" = [
    "S101", # Use of assert detected
]

[tool.ruff.lint.pydocstyle]
convention = "pep257"
ignore-decorators = ["typing.overload"]

[tool.ruff.lint.pylint]
allow-magic-value-types = ["int", "str", "float", "bytes"]

[tool.black]
line-length = 120
target-version = ['py310']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.venv
  | \.tox
  | build
  | dist
  | migrations
)/
'''

[fastapi-template.options]
project_name = "pes_apiv1"
api_type = "rest"
enable_redis = "None"
enable_rmq = "None"
ci_type = "github"
enable_migrations = "True"
enable_taskiq = "None"
enable_kube = "None"
kube_name = "pes-apiv1"
enable_routers = "True"
enable_kafka = "None"
enable_loguru = "True"
traefik_labels = "True"
add_dummy = "True"
orm = "sqlalchemy"
self_hosted_swagger = "None"
prometheus_enabled = "None"
sentry_enabled = "True"
otlp_enabled = "None"
gunicorn = "True"
add_users = "None"
cookie_auth = "None"
jwt_auth = "None"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"
